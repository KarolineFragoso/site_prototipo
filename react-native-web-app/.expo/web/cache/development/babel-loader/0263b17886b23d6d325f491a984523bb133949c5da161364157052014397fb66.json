{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SalesReportScreen(_ref) {\n  var onBack = _ref.onBack;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    sales = _useState2[0],\n    setSales = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filterDate = _useState4[0],\n    setFilterDate = _useState4[1];\n  var API_URL = 'http://localhost:3001';\n  useEffect(function () {\n    fetchSales();\n  }, []);\n  var fetchSales = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(API_URL + \"/sales\");\n        if (!response.ok) throw new Error('Erro ao buscar vendas');\n        var data = yield response.json();\n        setSales(data);\n      } catch (error) {\n        Alert.alert('Erro', error.message);\n      }\n    });\n    return function fetchSales() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var filteredSales = sales.filter(function (sale) {\n    if (!filterDate) return true;\n    var saleDate = new Date(sale.date).toISOString().slice(0, 10);\n    return saleDate.includes(filterDate);\n  });\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Relat\\xF3rio de Vendas\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Filtrar por data (YYYY-MM-DD)\",\n      value: filterDate,\n      onChangeText: setFilterDate\n    }), filteredSales.length === 0 ? _jsx(Text, {\n      style: styles.emptyMessage,\n      children: \"Nenhuma venda registrada.\"\n    }) : filteredSales.map(function (sale) {\n      return _jsxs(View, {\n        style: styles.saleItem,\n        children: [_jsxs(Text, {\n          style: styles.productText,\n          children: [\"Produto: \", sale.product]\n        }), _jsxs(Text, {\n          style: styles.productText,\n          children: [\"Quantidade: \", sale.quantity]\n        }), _jsxs(Text, {\n          style: styles.productText,\n          children: [\"Pre\\xE7o Total: R$ \", sale.total_price ? sale.total_price.toFixed(2) : '0.00']\n        }), _jsxs(Text, {\n          style: styles.productText,\n          children: [\"Tipo: \", sale.price_type === 'wholesale' ? 'Atacado' : 'Varejo']\n        }), _jsxs(Text, {\n          style: styles.productText,\n          children: [\"Data: \", sale.date ? new Date(sale.date).toLocaleString() : '']\n        })]\n      }, sale.id);\n    }), _jsx(Button, {\n      title: \"Voltar\",\n      onPress: onBack\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '700',\n    color: '#6a0dad',\n    marginBottom: 20,\n    textTransform: 'uppercase',\n    textAlign: 'center'\n  },\n  saleItem: {\n    backgroundColor: '#121212',\n    padding: 10,\n    marginBottom: 10,\n    borderRadius: 8\n  },\n  productText: {\n    color: '#dcdcdc'\n  },\n  emptyMessage: {\n    color: '#9a7ed1',\n    fontStyle: 'italic',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  input: {\n    backgroundColor: '#1e1e1e',\n    color: '#ffffff',\n    padding: 10,\n    marginBottom: 20,\n    borderRadius: 8,\n    borderColor: '#6a0dad',\n    borderWidth: 1\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","Button","ScrollView","Alert","TextInput","jsx","_jsx","jsxs","_jsxs","SalesReportScreen","_ref","onBack","_useState","_useState2","_slicedToArray","sales","setSales","_useState3","_useState4","filterDate","setFilterDate","API_URL","fetchSales","_ref2","_asyncToGenerator","response","fetch","ok","Error","data","json","error","alert","message","apply","arguments","filteredSales","filter","sale","saleDate","Date","date","toISOString","slice","includes","style","styles","container","children","title","input","placeholder","value","onChangeText","length","emptyMessage","map","saleItem","productText","product","quantity","total_price","toFixed","price_type","toLocaleString","id","onPress","create","flex","backgroundColor","padding","fontSize","fontWeight","color","marginBottom","textTransform","textAlign","borderRadius","fontStyle","marginTop","borderColor","borderWidth"],"sources":["C:/JoaozinhoCelular/site_prototipo/react-native-web-app/SalesReportScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Button, ScrollView, Alert, TextInput } from 'react-native';\r\n\r\nexport default function SalesReportScreen({ onBack }) {\r\n  const [sales, setSales] = useState([]);\r\n  const [filterDate, setFilterDate] = useState('');\r\n  const API_URL = 'http://localhost:3001';\r\n\r\n  useEffect(() => {\r\n    fetchSales();\r\n  }, []);\r\n\r\n  const fetchSales = async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/sales`);\r\n      if (!response.ok) throw new Error('Erro ao buscar vendas');\r\n      const data = await response.json();\r\n      setSales(data);\r\n    } catch (error) {\r\n      Alert.alert('Erro', error.message);\r\n    }\r\n  };\r\n\r\n  const filteredSales = sales.filter(sale => {\r\n    if (!filterDate) return true;\r\n    const saleDate = new Date(sale.date).toISOString().slice(0, 10);\r\n    return saleDate.includes(filterDate);\r\n  });\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Text style={styles.title}>Relatório de Vendas</Text>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Filtrar por data (YYYY-MM-DD)\"\r\n        value={filterDate}\r\n        onChangeText={setFilterDate}\r\n      />\r\n\r\n      {filteredSales.length === 0 ? (\r\n        <Text style={styles.emptyMessage}>Nenhuma venda registrada.</Text>\r\n      ) : (\r\n        filteredSales.map((sale) => (\r\n          <View key={sale.id} style={styles.saleItem}>\r\n            <Text style={styles.productText}>Produto: {sale.product}</Text>\r\n            <Text style={styles.productText}>Quantidade: {sale.quantity}</Text>\r\n            <Text style={styles.productText}>Preço Total: R$ {(sale.total_price ? sale.total_price.toFixed(2) : '0.00')}</Text>\r\n            <Text style={styles.productText}>Tipo: {sale.price_type === 'wholesale' ? 'Atacado' : 'Varejo'}</Text>\r\n            <Text style={styles.productText}>Data: {sale.date ? new Date(sale.date).toLocaleString() : ''}</Text>\r\n          </View>\r\n        ))\r\n      )}\r\n      <Button title=\"Voltar\" onPress={onBack} />\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#000000',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: '700',\r\n    color: '#6a0dad',\r\n    marginBottom: 20,\r\n    textTransform: 'uppercase',\r\n    textAlign: 'center',\r\n  },\r\n  saleItem: {\r\n    backgroundColor: '#121212',\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    borderRadius: 8,\r\n  },\r\n  productText: {\r\n    color: '#dcdcdc',\r\n  },\r\n  emptyMessage: {\r\n    color: '#9a7ed1',\r\n    fontStyle: 'italic',\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n  },\r\n  input: {\r\n    backgroundColor: '#1e1e1e',\r\n    color: '#ffffff',\r\n    padding: 10,\r\n    marginBottom: 20,\r\n    borderRadius: 8,\r\n    borderColor: '#6a0dad',\r\n    borderWidth: 1,\r\n  },\r\n});\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAGnD,eAAe,SAASC,iBAAiBA,CAAAC,IAAA,EAAa;EAAA,IAAVC,MAAM,GAAAD,IAAA,CAANC,MAAM;EAChD,IAAAC,SAAA,GAA0BhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAoCrB,QAAQ,CAAC,EAAE,CAAC;IAAAsB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAMG,OAAO,GAAG,uBAAuB;EAEvCxB,SAAS,CAAC,YAAM;IACdyB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,UAAU;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC7B,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,CAAIL,OAAO,WAAQ,CAAC;QAChD,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1D,IAAMC,IAAI,SAASJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCd,QAAQ,CAACa,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACd5B,KAAK,CAAC6B,KAAK,CAAC,MAAM,EAAED,KAAK,CAACE,OAAO,CAAC;MACpC;IACF,CAAC;IAAA,gBATKX,UAAUA,CAAA;MAAA,OAAAC,KAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;EAAA,GASf;EAED,IAAMC,aAAa,GAAGrB,KAAK,CAACsB,MAAM,CAAC,UAAAC,IAAI,EAAI;IACzC,IAAI,CAACnB,UAAU,EAAE,OAAO,IAAI;IAC5B,IAAMoB,QAAQ,GAAG,IAAIC,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC/D,OAAOJ,QAAQ,CAACK,QAAQ,CAACzB,UAAU,CAAC;EACtC,CAAC,CAAC;EAEF,OACEX,KAAA,CAACN,UAAU;IAAC2C,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAClC1C,IAAA,CAACP,IAAI;MAAC8C,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAmB,CAAM,CAAC,EAErD1C,IAAA,CAACF,SAAS;MACRyC,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,+BAA+B;MAC3CC,KAAK,EAAEjC,UAAW;MAClBkC,YAAY,EAAEjC;IAAc,CAC7B,CAAC,EAEDgB,aAAa,CAACkB,MAAM,KAAK,CAAC,GACzBhD,IAAA,CAACP,IAAI;MAAC8C,KAAK,EAAEC,MAAM,CAACS,YAAa;MAAAP,QAAA,EAAC;IAAyB,CAAM,CAAC,GAElEZ,aAAa,CAACoB,GAAG,CAAC,UAAClB,IAAI;MAAA,OACrB9B,KAAA,CAACR,IAAI;QAAe6C,KAAK,EAAEC,MAAM,CAACW,QAAS;QAAAT,QAAA,GACzCxC,KAAA,CAACT,IAAI;UAAC8C,KAAK,EAAEC,MAAM,CAACY,WAAY;UAAAV,QAAA,GAAC,WAAS,EAACV,IAAI,CAACqB,OAAO;QAAA,CAAO,CAAC,EAC/DnD,KAAA,CAACT,IAAI;UAAC8C,KAAK,EAAEC,MAAM,CAACY,WAAY;UAAAV,QAAA,GAAC,cAAY,EAACV,IAAI,CAACsB,QAAQ;QAAA,CAAO,CAAC,EACnEpD,KAAA,CAACT,IAAI;UAAC8C,KAAK,EAAEC,MAAM,CAACY,WAAY;UAAAV,QAAA,GAAC,qBAAgB,EAAEV,IAAI,CAACuB,WAAW,GAAGvB,IAAI,CAACuB,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM;QAAA,CAAQ,CAAC,EACnHtD,KAAA,CAACT,IAAI;UAAC8C,KAAK,EAAEC,MAAM,CAACY,WAAY;UAAAV,QAAA,GAAC,QAAM,EAACV,IAAI,CAACyB,UAAU,KAAK,WAAW,GAAG,SAAS,GAAG,QAAQ;QAAA,CAAO,CAAC,EACtGvD,KAAA,CAACT,IAAI;UAAC8C,KAAK,EAAEC,MAAM,CAACY,WAAY;UAAAV,QAAA,GAAC,QAAM,EAACV,IAAI,CAACG,IAAI,GAAG,IAAID,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,CAACuB,cAAc,CAAC,CAAC,GAAG,EAAE;QAAA,CAAO,CAAC;MAAA,GAL5F1B,IAAI,CAAC2B,EAMV,CAAC;IAAA,CACR,CACF,EACD3D,IAAA,CAACL,MAAM;MAACgD,KAAK,EAAC,QAAQ;MAACiB,OAAO,EAAEvD;IAAO,CAAE,CAAC;EAAA,CAChC,CAAC;AAEjB;AAEA,IAAMmC,MAAM,GAAGhD,UAAU,CAACqE,MAAM,CAAC;EAC/BpB,SAAS,EAAE;IACTqB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE;EACX,CAAC;EACDrB,KAAK,EAAE;IACLsB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE,SAAS;IAChBC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE,WAAW;IAC1BC,SAAS,EAAE;EACb,CAAC;EACDnB,QAAQ,EAAE;IACRY,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,EAAE;IACXI,YAAY,EAAE,EAAE;IAChBG,YAAY,EAAE;EAChB,CAAC;EACDnB,WAAW,EAAE;IACXe,KAAK,EAAE;EACT,CAAC;EACDlB,YAAY,EAAE;IACZkB,KAAK,EAAE,SAAS;IAChBK,SAAS,EAAE,QAAQ;IACnBF,SAAS,EAAE,QAAQ;IACnBG,SAAS,EAAE;EACb,CAAC;EACD7B,KAAK,EAAE;IACLmB,eAAe,EAAE,SAAS;IAC1BI,KAAK,EAAE,SAAS;IAChBH,OAAO,EAAE,EAAE;IACXI,YAAY,EAAE,EAAE;IAChBG,YAAY,EAAE,CAAC;IACfG,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE;EACf;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}